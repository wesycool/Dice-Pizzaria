//Christine - Define API key.
var APIKey = "2015c5f25f689dcf6dedba026011e032";

// Christine - Use geolocation api to retrieve location using coordinates.
function getLocation(units) {
    navigator.geolocation.getCurrentPosition(function(position){
        var latitude = position.coords.latitude;
        console.log(latitude);
        var longitude = position.coords.longitude;
        console.log(longitude);
        var conversion = (units == "metric")?"C":"F";
        var todayURL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=${units}&appid=${APIKey}`;
        var forecastURL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=current,minutely,hourly&units=${units}&appid=${APIKey}`;

        //Christine - Add current location and weather information to NavBar.
        function displayData(data) {
            console.log(data);
            document.querySelector("#forecastBtn").innerHTML = `${data.main.temp} &deg;${conversion} <img src='http://openweathermap.org/img/wn/${data.weather[0].icon}.png'>`;
            document.querySelector("#modalHeader").innerHTML = `${data.name} 5-Day Local Forecast`;
        }
        //Christine - Fetch URL generated by geolocation coordinates to access current weather.
        function fetchData(URL) {
            fetch(URL, {
                method: "GET",
        })
            .then(response => response.json())
            .then(data => displayData(data))
        }
        //Christine - Fetch URL generated by geolocation coordinates to access 5-day weather forecast.
        function fetchForecast(URL) {
            fetch(URL, {
            })
            .then(response => response.json())
            .then(data => displayForecast(data))
        }
        //Christine - Add 5-day forecast information to modal pop-up.
        function displayForecast(data) {
            document.querySelector("#forecast").innerHTML = "";
            for (i = 1; i <= 5; i++) {
                document.querySelector("#forecast").innerHTML += 
                `<div class="row" style="text-align: center; border: 1px solid lightgray; margin: 5px;">
                    <div class="col-4">
                        <img src='http://openweathermap.org/img/wn/${data.daily[i].weather[0].icon}@2x.png'> <br>
                        ${moment(data.daily[i].dt,"X").format('L')} 
                    </div>
                    <div class="col" style="margin-top: 35px;">
                       High: ${data.daily[i].temp.max}&deg;${conversion} Low: ${data.daily[i].temp.min}&deg;${conversion} <br> Description: ${data.daily[i].weather[0].description}
                    </div>
                </div>`;
            }
        }

        fetchData(todayURL);
        fetchForecast(forecastURL);
    })
}


//Christine - Add current time to NavBar that automatically updates every second.
let localTime = function() {
        document.querySelector("#timeStamp").innerHTML = `${moment().format('MMMM Do YYYY, h:mm:ss a')}`;
}
setInterval(localTime, 1000);


//jQuery required for modal usage in HTML.
$('#forecastModal').on('shown.bs.modal', function () {
    $('#forecastModalInput').trigger('focus')
  })
//----------------------------------------------------------------------------------------------

    //     function changeUnits() {
    //         if (document.querySelector("#metric").onclick) {
    //         getLocation("metric");
    //         } else if (document.querySelector("#imperial").onclick) {
    //         getLocation("imperial");
    //     }
    // }

